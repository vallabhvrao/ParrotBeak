{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "GenerateVanityObjLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/parrot-beak-staging-GenerateVanityObj"
      }
    },
    "VanityLookupLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/parrot-beak-staging-VanityLookup"
      }
    },
    "ContactFlowPublishLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/parrot-beak-staging-ContactFlowPublish"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "parrot-beak",
                  "staging",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/parrot-beak-staging*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/parrot-beak-staging*:*:*"
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "parrot-beak",
              "staging",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "GenerateVanityObjLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/parrot-beak/staging/1642287678761-2022-01-15T23:01:18.761Z/parrot-beak.zip"
        },
        "Handler": "build/functions/generateVanityObj.handler",
        "Runtime": "nodejs14.x",
        "FunctionName": "parrot-beak-staging-GenerateVanityObj",
        "MemorySize": 1024,
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "NODE_PATH": "./:/opt/node_modules",
            "STAGE": "staging",
            "DB_TABLE_NAME": {
              "Ref": "DynamoDb"
            },
            "S3_DATA_BUCKET": {
              "Ref": "Assets"
            }
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "GenerateVanityObjIamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "GenerateVanityObjIamRoleLambdaExecution",
        "GenerateVanityObjLogGroup"
      ]
    },
    "VanityLookupLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/parrot-beak/staging/1642287678761-2022-01-15T23:01:18.761Z/parrot-beak.zip"
        },
        "Handler": "build/functions/vanityLookup.handler",
        "Runtime": "nodejs14.x",
        "FunctionName": "parrot-beak-staging-VanityLookup",
        "MemorySize": 1024,
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "NODE_PATH": "./:/opt/node_modules",
            "STAGE": "staging",
            "DB_TABLE_NAME": {
              "Ref": "DynamoDb"
            },
            "S3_DATA_BUCKET": {
              "Ref": "Assets"
            }
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "VanityLookupIamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "VanityLookupIamRoleLambdaExecution",
        "VanityLookupLogGroup"
      ]
    },
    "ContactFlowPublishLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/parrot-beak/staging/1642287678761-2022-01-15T23:01:18.761Z/parrot-beak.zip"
        },
        "Handler": "build/functions/contactFlowPublish.handler",
        "Runtime": "nodejs14.x",
        "FunctionName": "parrot-beak-staging-ContactFlowPublish",
        "MemorySize": 256,
        "Timeout": 10,
        "Environment": {
          "Variables": {
            "NODE_PATH": "./:/opt/node_modules",
            "STAGE": "staging",
            "LOOKUP_ARN": "arn:aws:lambda:eu-west-2:012700660634:function:parrot-beak-staging-VanityLookup",
            "BUCKET": {
              "Ref": "Assets"
            },
            "CONNECT_INSTANCE_ID": "05a49525-75e7-4958-b37e-820eb3a5dd4f"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "ContactFlowPublishIamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "ContactFlowPublishIamRoleLambdaExecution",
        "ContactFlowPublishLogGroup"
      ]
    },
    "GenerateVanityObjLambdaVersion1nqN6KHq3JAFLlG80conNTzwlXqcU4PtzpNoh8yJw": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "GenerateVanityObjLambdaFunction"
        },
        "CodeSha256": "ioeQS1hbA04VpHGDYEAiKc08Av8W8bOruW2Lcp6onLI="
      }
    },
    "VanityLookupLambdaVersions5FBxJ6DD7WXR1s8qIKSO83nS9CR0j8qNzzi5nI": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "VanityLookupLambdaFunction"
        },
        "CodeSha256": "ioeQS1hbA04VpHGDYEAiKc08Av8W8bOruW2Lcp6onLI="
      }
    },
    "ContactFlowPublishLambdaVersionuMzeYoKwdjtEUkCDwYpPxePeGEQV8SjTZllWiONZk": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "ContactFlowPublishLambdaFunction"
        },
        "CodeSha256": "ioeQS1hbA04VpHGDYEAiKc08Av8W8bOruW2Lcp6onLI="
      }
    },
    "GenerateVanityObjIamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "parrot-beak",
                  "staging",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/parrot-beak-staging-GenerateVanityObj:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:PutItem"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "DynamoDb",
                        "Arn"
                      ]
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:*"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "Assets",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "Assets",
                              "Arn"
                            ]
                          },
                          "/*"
                        ]
                      ]
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "lambda:AddPermission"
                  ],
                  "Resource": "arn:aws:lambda:eu-west-2:012700660634:function:parrot-beak-staging-VanityLookup"
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "parrot-beak",
              "staging",
              "GenerateVanityObj",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        },
        "ManagedPolicyArns": []
      }
    },
    "VanityLookupIamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "parrot-beak",
                  "staging",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/parrot-beak-staging-VanityLookup:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:PutItem"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "DynamoDb",
                        "Arn"
                      ]
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:*"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "Assets",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "Assets",
                              "Arn"
                            ]
                          },
                          "/*"
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "Assets",
                              "Arn"
                            ]
                          },
                          "/public"
                        ]
                      ]
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "lambda:InvokeFunction",
                    "lambda:InvokeAsync"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "parrot-beak",
              "staging",
              "VanityLookup",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        },
        "ManagedPolicyArns": []
      }
    },
    "ContactFlowPublishIamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "parrot-beak",
                  "staging",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/parrot-beak-staging-ContactFlowPublish:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "connect:*"
                  ],
                  "Resource": [
                    "arn:aws:connect:eu-west-2:012700660634:instance/05a49525-75e7-4958-b37e-820eb3a5dd4f/contact-flow/*",
                    "arn:aws:connect:eu-west-2:012700660634:instance/05a49525-75e7-4958-b37e-820eb3a5dd4f"
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:*"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "Assets",
                        "Arn"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "parrot-beak",
              "staging",
              "ContactFlowPublish",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        },
        "ManagedPolicyArns": []
      }
    },
    "DynamoDb": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "HashKey",
            "AttributeType": "S"
          },
          {
            "AttributeName": "RangeKey",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "HashKey",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "RangeKey",
            "KeyType": "RANGE"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST"
      }
    },
    "Assets": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "CorsConfiguration": {
          "CorsRules": [
            {
              "AllowedOrigins": [
                "*"
              ],
              "AllowedHeaders": [
                "*"
              ],
              "AllowedMethods": [
                "GET",
                "PUT",
                "POST",
                "DELETE",
                "HEAD"
              ],
              "MaxAge": 3000
            }
          ]
        }
      }
    },
    "CustomResource": {
      "Type": "Custom::ConnectFlow",
      "DependsOn": [
        "VanityLookupLambdaFunction",
        "ContactFlowPublishLambdaFunction"
      ],
      "Properties": {
        "ServiceToken": "arn:aws:lambda:eu-west-2:012700660634:function:parrot-beak-staging-ContactFlowPublish"
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-parrot-beak-staging-ServerlessDeploymentBucketName"
      }
    },
    "GenerateVanityObjLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "GenerateVanityObjLambdaVersion1nqN6KHq3JAFLlG80conNTzwlXqcU4PtzpNoh8yJw"
      },
      "Export": {
        "Name": "sls-parrot-beak-staging-GenerateVanityObjLambdaFunctionQualifiedArn"
      }
    },
    "VanityLookupLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "VanityLookupLambdaVersions5FBxJ6DD7WXR1s8qIKSO83nS9CR0j8qNzzi5nI"
      },
      "Export": {
        "Name": "sls-parrot-beak-staging-VanityLookupLambdaFunctionQualifiedArn"
      }
    },
    "ContactFlowPublishLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "ContactFlowPublishLambdaVersionuMzeYoKwdjtEUkCDwYpPxePeGEQV8SjTZllWiONZk"
      },
      "Export": {
        "Name": "sls-parrot-beak-staging-ContactFlowPublishLambdaFunctionQualifiedArn"
      }
    }
  }
}